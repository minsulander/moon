$#include <moodyn/components/Body.h>

namespace moodyn {

	class Body : public moon::Component {
		void realize();
		void unrealize();
		bool isRealized() { return bodyID != 0; }
		
		void setTransformation(osg::Matrix& M);
		osg::Matrix getTransformation();
		void setPosition(osg::Vec3& pos);
		osg::Vec3 getPosition();
		void setRotation(osg::Quat& rot);
		osg::Quat getRotation();
		void setVelocity(osg::Vec3& vel, const bool rel = false);
		osg::Vec3 getVelocity(const bool rel = false);
		void setAngularVelocity(osg::Vec3& avel, const bool rel = false);
		osg::Vec3 getAngularVelocity(const bool rel = false);
		
		void addForce(osg::Vec3& F, const bool rel = false);
		void addForceAt(osg::Vec3& F, const bool rel = false, osg::Vec3& pos = osg::Vec3(0,0,0), const bool relpos = false);
		void addTorque(osg::Vec3& Q, const bool rel = false);
		void setForce(osg::Vec3& F, const bool rel = false);
		void setTorque(osg::Vec3& Q, const bool rel = false);
		osg::Vec3 getForce(const bool rel = false);
		osg::Vec3 getTorque(const bool rel = false);
		
		const double getMass();
		void setMass(const double newmass);
		
		const bool isEnabled() const;
		void enable();
		void disable();
		
		bool isConnectedTo(Body *other);
		
		dBodyID id();
	};

}
